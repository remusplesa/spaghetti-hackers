import type { InferGetServerSidePropsType, NextPage } from "next";
import { useRouter } from "next/router";

import { useEffect, useState } from "react";
import Head from "next/head";
import { Container, Title, Button, Space, Group } from "@mantine/core";
import { Navbar, Banner } from "../components";
import { supabase } from "../utils/supabase";
import { ClientList } from "../components";
import { FitDistanceTile } from "../components/FitDistanceTile";

const Dashboard: NextPage = () => {
  const router = useRouter();
  const [activities, setActivities] = useState([])
  const [runnerPackage, setRunnerPackage] = useState({})
  const [session, setSession] = useState()
  let lastActivity

  useEffect(() => {
    setTimeout(
      (async () => {
        const user = supabase.auth.user();
        console.log('curr user', user)
        let { data: dbProfile, error } = await supabase
          .from("profile")
          .select("*")
          .eq("id", user?.id);
        console.log("👀", dbProfile);

        if (!dbProfile?.length) {
          router.push("/create");
        }
      }), 100)
    //   getLastActivity();
  }, []);


  const verifyExistingPackage = async () => {
    const user = supabase.auth.user();
    let { data: dbPackage, error } = await supabase
      .from('runner_package')
      .select('*')
      .eq('runner_id', user)
    setRunnerPackage(dbPackage || {})
  }



  const getLastActivity = async () => {
    console.log("get last activity")
    const res = await fetch('/api/garmin-connect')
    const resText = await res.text()
    setActivities(JSON.parse(resText))
    lastActivity = activities[activities.length - 1]
    console.log("🎾", activities)
    return activities
  }

  const getActivityDistance = (activity) => {
    if (!activity) return "0"
    let distance = 0
    distance = (parseInt(activity.distance) / 1000).toFixed(2)
    return distance.toString()
  }

  return (
    <Container>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <Navbar title={"find-a-coach 🏃‍♀️"} />
        <Space h="xl" />

        <ClientList></ClientList>
        <FitDistanceTile distance={getActivityDistance(lastActivity)} unit='km' />
      </main>
    </Container>
  );
};


export default Dashboard;
