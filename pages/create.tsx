import { useEffect, useState } from "react";
import type { NextPage } from "next";
import { NextRouter, useRouter } from "next/router";
import Head from "next/head";
import {
  Container,
  Textarea,
  Button,
  Space,
  Group,
  Stepper,
  RadioGroup,
  Radio,
  Center,
  TextInput,
  Checkbox,
  Select,
  Stack,
  NumberInput,
} from "@mantine/core";
import { DatePicker } from "@mantine/dates";
import { useForm } from "@mantine/form";
import { Navbar, Banner } from "../components";
import { coachFormSubmit } from '../utils/coachFormSubmit';

const Dashboard: NextPage = () => {
  const router = useRouter();
  const [isCoach, setIsCoach] = useState<boolean>();
  const [active, setActive] = useState(0);

  const coachForm = useForm({
    initialValues: {
      username: "",
      about: "",
      dateOfBirth: new Date("2000-01-01T00:00:00Z").toISOString(),
      gender: "",
      location: "",
      isOkRemote: false,
      termsOfService: false,
    },
    validate: {
      username: (value) => (value.length > 0 ? null : "Provide a name"),
      termsOfService: (value) =>
        value === true ? null : "Must accept terms of service",
    },
  });

  const athleteForm = useForm({
    initialValues: {
      username: "",
      about: "",
      dateOfBirth: new Date("2000-01-01T00:00:00Z").toISOString(),
      gender: "",
      location: "",
      isOkRemote: false,
      termsOfService: false,
      height: 172,
      weight: 81,
      experience: "",
      targetDistance: 0,
      daysAvailable: 0,
      raceDate: new Date("2000-01-01T00:00:00Z").toISOString()
    },
  });

  const nextStep = () =>
    setActive((current) => (current < 2 ? current + 1 : current));
  const prevStep = () =>
    setActive((current) => (current > 0 ? current - 1 : current));

  return (
    <Container>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <Navbar title={"find-a-coach 🏃‍♀️"} />
        <Space h="xl" />
        <Banner title="User registration" height={100} />
        <Stepper active={active} onStepClick={setActive} breakpoint="sm">
          <Stepper.Step label="First step" description="Select account type">
            <Center style={{ height: 200 }}>
              <RadioGroup
                orientation="vertical"
                label="Are you an athlete or a coach?"
                required
                onChange={(v) => {
                  setIsCoach(v === "true");
                }}
              >
                <Radio value="false" label="Athlete" />
                <Radio value="true" label="Coach" />
              </RadioGroup>
            </Center>
          </Stepper.Step>
          <Stepper.Step label="Second step" description="Fill in the details">
            {isCoach ? (
              <div>
                <form>
                  <Stack py={32}>
                    <TextInput
                      required
                      label="Name"
                      placeholder="John Doe"
                      {...coachForm.getInputProps("username")}
                    />

                    <Textarea
                      label="About myself"
                      placeholder=""
                      {...coachForm.getInputProps("about")}
                    />
                    <RadioGroup
                      orientation="horizontal"
                      label="Gender"
                      {...coachForm.getInputProps("gender")}
                    >
                      <Radio value="male" label="Male" />
                      <Radio value="female" label="Female" />
                    </RadioGroup>
                    <DatePicker
                      placeholder="Pick date"
                      label="Date of birth"
                      maxDate={new Date('2005-12-31')}
                      {...coachForm.getInputProps("dateOfBirth")}
                    />
                    <Select
                      label="City"
                      placeholder="Pick one"
                      {...coachForm.getInputProps("location")}
                      data={[
                        { value: "Timisoara", label: "Timisoara" },
                        { value: "Bucuresti", label: "Bucuresti" },
                        { value: "Cluj", label: "Cluj" },
                        { value: "Brasov", label: "Brasov" },
                        { value: "Conatanta", label: "Conatanta" },
                        { value: "Iasi", label: "Iasi" },
                      ]}
                    />
                    <Checkbox
                      mt="md"
                      label="Remote availability"
                      {...coachForm.getInputProps("isOkRemote", {
                        type: "checkbox",
                      })}
                    />
                    <Checkbox
                      mt="md"
                      label="I agree to sell my privacy"
                      {...coachForm.getInputProps("termsOfService", {
                        type: "checkbox",
                      })}
                    />
                  </Stack>
                </form>
              </div>
            ) : (
              <div>
              <form>
                <Stack py={32}>
                  <TextInput
                    required
                    label="Name"
                    placeholder="John Doe"
                    {...athleteForm.getInputProps("username")}
                  />
                   <Textarea
                    label="Sports Experience"
                    placeholder="Running since childhood..."
                    {...athleteForm.getInputProps("experience")}
                  />
                  <RadioGroup
                    orientation="horizontal"
                    label="Gender"
                    {...athleteForm.getInputProps("gender")}
                  >
                    <Radio value="male" label="Male" />
                    <Radio value="female" label="Female" />
                  </RadioGroup>
                  <DatePicker
                    placeholder="Pick date"
                    label="Date of birth"
                    maxDate={new Date('2005-12-31')}
                    {...athleteForm.getInputProps("dateOfBirth")}
                  />
                  <Group>
                     <NumberInput
                    defaultValue={171}
                    placeholder="Your height"
                    label="Your height"
                    required
                    {...athleteForm.getInputProps("height")}
                  />
                   <NumberInput
                    defaultValue={82}
                    placeholder="Your weight"
                    label="Your weight"
                    required
                    {...athleteForm.getInputProps("weight")}
                  />
                  </Group>

                  <Group>
                  <NumberInput
                    defaultValue={171}
                    placeholder="42 km"
                    label="Target distance"
                    required
                    {...athleteForm.getInputProps("targetDistance")}
                  />
                   <NumberInput
                    defaultValue={82}
                    placeholder="Available days"
                    label="Available days per week"
                    required
                    {...athleteForm.getInputProps("daysAvailable")}
                  />
                  </Group>
                  <DatePicker
                    placeholder="Goals deadline"
                    label="Goals deadline"
                    {...athleteForm.getInputProps("raceDate")}
                  />
                  
                  <Select
                    label="City"
                    placeholder="Pick one"
                    {...athleteForm.getInputProps("location")}
                    data={[
                      { value: "Timisoara", label: "Timisoara" },
                      { value: "Bucuresti", label: "Bucuresti" },
                      { value: "Cluj", label: "Cluj" },
                      { value: "Brasov", label: "Brasov" },
                      { value: "Conatanta", label: "Conatanta" },
                      { value: "Iasi", label: "Iasi" },
                    ]}
                  />
                  <Checkbox
                    mt="md"
                    label="Remote availability"
                    {...athleteForm.getInputProps("isOkRemote", {
                      type: "checkbox",
                    })}
                  />
                  <Checkbox
                    mt="md"
                    label="I agree to sell my privacy"
                    {...athleteForm.getInputProps("termsOfService", {
                      type: "checkbox",
                    })}
                  />
                </Stack>
              </form>
            </div>
            )}
          </Stepper.Step>
          <Stepper.Completed>
            Completed, click back button to get to previous step
          </Stepper.Completed>
        </Stepper>

        <Group position="center" pb={32}>
          <Button variant="default" onClick={prevStep}>
            Back
          </Button>
          {active === 0 && (
            <Button onClick={nextStep} disabled={isCoach === undefined}>
              Next step
            </Button>
          )}
          {active === 1 && (
            <Button
              type="submit"
              onClick={coachForm.onSubmit((values) => {
                coachFormSubmit(values, router);
              })}
              disabled={Object.keys(coachForm.errors).length > 0}
            >
              Submit
            </Button>
          )}
        </Group>
      </main>
    </Container>
  );
};

export default Dashboard;
